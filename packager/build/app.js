(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){

},{}],2:[function(require,module,exports){
// This script requires watchify!
// Install via "npm install -g watchify"
//
// To monitor this file for changes and rebuild automatically, type:
// watchify -v -t brfs script.js -o assets/js/script.js

var fs = require('fs');

// Set up drawer
var drawer = $('#drawer'),
    main = $('#main'),
    handle = drawer.find('.handle');

handle.click(function () {
  var classname = 'expanded';
  drawer.toggleClass(classname).animate({ height: drawer.hasClass(classname) ? 300 : 30 });

  main.animate({ bottom: drawer.hasClass(classname) ? 300 : 30 });
});


},{"fs":1}]},{},[2])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyaWZ5L25vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJub2RlX21vZHVsZXMvYnJvd3NlcmlmeS9saWIvX2VtcHR5LmpzIiwiL1VzZXJzL2FsZXhvc2Uvc3NhLWV4cGVyaW1lbnRzL3BhY2thZ2VyL3NjcmlwdHMvYXBwLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FDQUE7O0FDQUEsaUNBQWlDO0FBQ2pDLHdDQUF3QztBQUN4QyxFQUFFO0FBQ0Ysb0VBQW9FO0FBQ3BFLHVEQUF1RDs7QUFFdkQsSUFBSSxFQUFFLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDOztBQUV2QixnQkFBZ0I7QUFDaEIsSUFBSSxNQUFNLEdBQUcsQ0FBQyxDQUFDLFNBQVMsQ0FBQztJQUNyQixJQUFJLEdBQUcsQ0FBQyxDQUFDLE9BQU8sQ0FBQztBQUNyQixJQUFJLE1BQU0sR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDOztBQUVwQyxNQUFNLENBQUMsS0FBSyxDQUFDLFlBQVk7RUFDdkIsSUFBSSxTQUFTLEdBQUcsVUFBVSxDQUFDO0FBQzdCLEVBQUUsTUFBTSxDQUFDLFdBQVcsQ0FBQyxTQUFTLENBQUMsQ0FBQyxPQUFPLENBQUMsRUFBRSxNQUFNLEVBQUUsTUFBTSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsR0FBRyxHQUFHLEdBQUcsRUFBRSxFQUFFLENBQUMsQ0FBQzs7RUFFekYsSUFBSSxDQUFDLE9BQU8sQ0FBQyxFQUFFLE1BQU0sRUFBRSxNQUFNLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxHQUFHLEdBQUcsR0FBRyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0NBQ2pFLENBQUMsQ0FBQztBQUNIIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3ZhciBmPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIik7dGhyb3cgZi5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGZ9dmFyIGw9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGwuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sbCxsLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSIsIiIsIi8vIFRoaXMgc2NyaXB0IHJlcXVpcmVzIHdhdGNoaWZ5IVxuLy8gSW5zdGFsbCB2aWEgXCJucG0gaW5zdGFsbCAtZyB3YXRjaGlmeVwiXG4vL1xuLy8gVG8gbW9uaXRvciB0aGlzIGZpbGUgZm9yIGNoYW5nZXMgYW5kIHJlYnVpbGQgYXV0b21hdGljYWxseSwgdHlwZTpcbi8vIHdhdGNoaWZ5IC12IC10IGJyZnMgc2NyaXB0LmpzIC1vIGFzc2V0cy9qcy9zY3JpcHQuanNcblxudmFyIGZzID0gcmVxdWlyZSgnZnMnKTtcblxuLy8gU2V0IHVwIGRyYXdlclxudmFyIGRyYXdlciA9ICQoJyNkcmF3ZXInKSxcbiAgICBtYWluID0gJCgnI21haW4nKSxcbiAgICBoYW5kbGUgPSBkcmF3ZXIuZmluZCgnLmhhbmRsZScpO1xuXG5oYW5kbGUuY2xpY2soZnVuY3Rpb24gKCkge1xuICB2YXIgY2xhc3NuYW1lID0gJ2V4cGFuZGVkJztcbiAgZHJhd2VyLnRvZ2dsZUNsYXNzKGNsYXNzbmFtZSkuYW5pbWF0ZSh7IGhlaWdodDogZHJhd2VyLmhhc0NsYXNzKGNsYXNzbmFtZSkgPyAzMDAgOiAzMCB9KTtcblxuICBtYWluLmFuaW1hdGUoeyBib3R0b206IGRyYXdlci5oYXNDbGFzcyhjbGFzc25hbWUpID8gMzAwIDogMzAgfSk7XG59KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbUZ3Y0M1cWN5SmRMQ0p1WVcxbGN5STZXMTBzSW0xaGNIQnBibWR6SWpvaU96czdPenM3UVVGTlFTeEpRVUZKTEVWQlFVVXNSMEZCUnl4UFFVRlBMRU5CUVVNc1NVRkJTU3hEUVVGRE96czdRVUZCUXl4QlFVZDJRaXhKUVVGSkxFMUJRVTBzUjBGQlJ5eERRVUZETEVOQlFVTXNVMEZCVXl4RFFVRkRPMGxCUTNKQ0xFbEJRVWtzUjBGQlJ5eERRVUZETEVOQlFVTXNUMEZCVHl4RFFVRkRPMGxCUTJwQ0xFMUJRVTBzUjBGQlJ5eE5RVUZOTEVOQlFVTXNTVUZCU1N4RFFVRkRMRk5CUVZNc1EwRkJReXhEUVVGRE96dEJRVVZ3UXl4TlFVRk5MRU5CUVVNc1MwRkJTeXhEUVVGRExGbEJRVlU3UVVGRGNrSXNUVUZCU1N4VFFVRlRMRWRCUVVjc1ZVRkJWU3hEUVVGRE8wRkJRek5DTEZGQlFVMHNRMEZEU0N4WFFVRlhMRU5CUVVNc1UwRkJVeXhEUVVGRExFTkJRM1JDTEU5QlFVOHNRMEZCUXl4RlFVRkZMRTFCUVUwc1JVRkJSeXhOUVVGTkxFTkJRVU1zVVVGQlVTeERRVUZETEZOQlFWTXNRMEZCUXl4SFFVRkhMRWRCUVVjc1IwRkJSeXhGUVVGRkxFVkJRVVVzUTBGQlF5eERRVUZET3p0QlFVVXZSQ3hOUVVGSkxFTkJRMFFzVDBGQlR5eERRVUZETEVWQlFVVXNUVUZCVFN4RlFVRkhMRTFCUVUwc1EwRkJReXhSUVVGUkxFTkJRVU1zVTBGQlV5eERRVUZETEVkQlFVY3NSMEZCUnl4SFFVRkhMRVZCUVVVc1JVRkJSU3hEUVVGRExFTkJRVU03UTBGRGFFVXNRMEZCUXl4RFFVRkRJaXdpWm1sc1pTSTZJbUZ3Y0M1cWN5SXNJbk52ZFhKalpYTkRiMjUwWlc1MElqcGJJaTh2SUZSb2FYTWdjMk55YVhCMElISmxjWFZwY21WeklIZGhkR05vYVdaNUlWeHVMeThnU1c1emRHRnNiQ0IyYVdFZ1hDSnVjRzBnYVc1emRHRnNiQ0F0WnlCM1lYUmphR2xtZVZ3aVhHNHZMMXh1THk4Z1ZHOGdiVzl1YVhSdmNpQjBhR2x6SUdacGJHVWdabTl5SUdOb1lXNW5aWE1nWVc1a0lISmxZblZwYkdRZ1lYVjBiMjFoZEdsallXeHNlU3dnZEhsd1pUcGNiaTh2SUhkaGRHTm9hV1o1SUMxMklDMTBJR0p5Wm5NZ2MyTnlhWEIwTG1weklDMXZJR0Z6YzJWMGN5OXFjeTl6WTNKcGNIUXVhbk5jYmx4dWRtRnlJR1p6SUQwZ2NtVnhkV2x5WlNnblpuTW5LVHRjYmx4dUx5OGdVMlYwSUhWd0lHUnlZWGRsY2x4dWRtRnlJR1J5WVhkbGNpQTlJQ1FvSnlOa2NtRjNaWEluS1N4Y2JpQWdJQ0J0WVdsdUlEMGdKQ2duSTIxaGFXNG5LU3hjYmlBZ0lDQm9ZVzVrYkdVZ1BTQmtjbUYzWlhJdVptbHVaQ2duTG1oaGJtUnNaU2NwTzF4dVhHNW9ZVzVrYkdVdVkyeHBZMnNvWm5WdVkzUnBiMjRvS1h0Y2JpQWdkbUZ5SUdOc1lYTnpibUZ0WlNBOUlDZGxlSEJoYm1SbFpDYzdYRzRnSUdSeVlYZGxjbHh1SUNBZ0lDNTBiMmRuYkdWRGJHRnpjeWhqYkdGemMyNWhiV1VwWEc0Z0lDQWdMbUZ1YVcxaGRHVW9leUJvWldsbmFIUWdPaUJrY21GM1pYSXVhR0Z6UTJ4aGMzTW9ZMnhoYzNOdVlXMWxLU0EvSURNd01DQTZJRE13SUgwcE8xeHVYRzRnSUcxaGFXNWNiaUFnSUNBdVlXNXBiV0YwWlNoN0lHSnZkSFJ2YlNBNklHUnlZWGRsY2k1b1lYTkRiR0Z6Y3loamJHRnpjMjVoYldVcElEOGdNekF3SURvZ016QWdmU2s3WEc1OUtUdGNiaUpkZlE9PSJdfQ==
